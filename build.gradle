buildscript {
    dependencies {
        classpath files('src/main/java')
    }
}

plugins {
    id 'java'
    id 'pmd'
    id 'checkstyle'
}

wrapper {
    gradleVersion = '6.6.1'
}

group 'org.example'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.11

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }

    reports {
        html.enabled = false
        junitXml.enabled = false
    }
}

dependencies {
    implementation 'org.junit.jupiter:junit-jupiter:5.4.2'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.5.1")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.5.1")
    testCompile("org.mockito:mockito-core:3.+")
    testCompile('org.mockito:mockito-junit-jupiter:3.+')
}

def configDir = "${project.rootDir}/config"

pmdMain {
    ruleSetFiles = files("$configDir/pmd.xml")
    source ='src/main/java'
}

pmdTest {
    ruleSetFiles = files("$configDir/pmd.xml")
    source ='src/test/java'
}

checkstyleMain {
    configFile file("$configDir/checkstyle.xml")
    source ='src/main/java'
}

checkstyleTest {
    configFile file("$configDir/checkstyle.xml")
    source ='src/test/java'
}

task runIsOdd(dependsOn: 'classes') {
    doFirst() {
        println InputProperties.check(n as Integer, InputProperties.isOdd())
    }
}